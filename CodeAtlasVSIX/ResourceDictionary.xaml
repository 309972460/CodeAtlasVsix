<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CodeAtlasVSIX"
                    xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
                    >

    <Style TargetType="Menu" x:Key="MenuStyle">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
    </Style>

    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
        <Setter Property="Padding" Value="0,1,0,1"/>
    </Style>

    <Style TargetType="MenuItem" x:Key="MenuItemStyle">
        <Setter Property="Panel.Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.MenuTextKey}}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsHighlighted" Value="false">
                <Setter Property="Background" Value="Black" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" Value="Blue" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabControl" x:Key="TabStyle">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.FileTabBorderKey}}"/>
    </Style>


    <Style TargetType="GridSplitter" x:Key="GridSplitterStyle">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
    </Style>

    <Style TargetType="GroupBox" x:Key="GroupBoxStyle">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.MenuTextKey}}"/>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.FileTabTextKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border
                            Name="TabItemBorder"
                            Margin="0,0,-4,0"
                            Background="{DynamicResource {x:Static vsfx:VsBrushes.FileTabInactiveDocumentBorderBackgroundKey}}"
                            BorderThickness="1,1,1,1"
                            >
                            <ContentPresenter
                                x:Name="TabItemContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="5,2,5,2"
                                RecognizesAccessKey="True"
                                />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="TabItemBorder" Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.FileTabSelectedBackgroundKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Separator -->
    <Style TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Background" Value="#0f3c5a" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Rectangle Height="{TemplateBinding Height}" Fill="White" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.MenuTextKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Margin="0" x:Name="bd" 
                            Background="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"
                            CornerRadius="0" BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}" BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Margin="6,1,6,1" ContentSource="Header" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <Popup x:Name="pop" Margin="0" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Placement="Bottom">
                                <Border Margin="0" CornerRadius="0" BorderBrush="{DynamicResource {x:Static vsfx:VsBrushes.ActiveBorderKey}}" BorderThickness="0">
                                    <StackPanel IsItemsHost="True">
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Background" 
                                    Value="{DynamicResource {x:Static vsfx:VsBrushes.ButtonHighlightKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Background" 
                                    Value="{DynamicResource {x:Static vsfx:VsBrushes.ButtonHighlightKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
    <Style TargetType="Label" x:Key="LabelStyle" BasedOn="{StaticResource ResourceKey={x:Static vsfx:VsResourceKeys.ThemedDialogLabelStyleKey}}">
    </Style>

    <Style TargetType="TextBox" x:Key="TextBoxStyle" BasedOn="{StaticResource ResourceKey={x:Static vsfx:VsResourceKeys.TextBoxStyleKey}}">
    </Style>

    <Style TargetType="Button" x:Key="ButtonStyle" BasedOn="{StaticResource ResourceKey={x:Static vsfx:VsResourceKeys.ButtonStyleKey}}">
    </Style>

    <Style TargetType="ListBox" x:Key="ListBoxStyle" BasedOn="{StaticResource ResourceKey={x:Static vsfx:VsResourceKeys.ThemedDialogListBoxStyleKey}}">
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource ResourceKey={x:Static vsfx:VsResourceKeys.ComboBoxStyleKey}}">
    </Style>-->

    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource {x:Static vsfx:VsBrushes.CommandBarGradientKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vsfx:VsBrushes.MenuTextKey}}"/>
    </Style>
</ResourceDictionary>